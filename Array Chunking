/*
Coding Exercise - Array Chunk
Given an array and chunk size, divide the array into many subarrays where each subarray is of the provided size.

Examples:

 // Chunk size two:
 chunk([1, 2, 3, 4], 2) --> [[ 1, 2], [3, 4]]
 
 // Chunk size two:
 chunk([1, 2, 3, 4, 5], 2) --> [[ 1, 2], [3, 4], [5]]
 
 // Chunk size 3:
 chunk([1, 2, 3, 4, 5, 6, 7, 8], 3) --> [[ 1, 2, 3], [4, 5, 6], [7, 8]]
 
 // Chunk size 4:
 chunk([1, 2, 3, 4, 5], 4) --> [[ 1, 2, 3, 4], [5]]
 
 // Chunk size 10:
 chunk([1, 2, 3, 4, 5], 10) --> [[ 1, 2, 3, 4, 5]]
*/

const chunk = (arr, size) => {
  const chunked = []
  for (let ele of arr) {
    const last = chunked[chunked.length - 1]
    if (!last || last.length === size) {
      chunked.push([ele])
    } else[
      last.push(ele)
    ]
  }
  return chunked;
}

const chunkArr = (arr, n) => {
  //console.log(arr)
  let ans = []
  for (let i = 0; i < arr.length; i += n) {

    ans.push(arr.slice(i, n + i))
  }
  return ans
}
