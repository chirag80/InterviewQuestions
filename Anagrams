/*

Coding Exercise - Anagrams
Check to see if two provided strings are anagrams of each other. One string is an anagram of another if it uses the same characters in the same quantity.

Only consider characters, not spaces or punctuation

Consider capital letters to be the same as lower case

Examples:

anagrams('rail safety', 'fairy tales') === true
anagrams('RAIL! SAFETY!', 'fairy tales') === true
anagrams('Hi there', 'Bye there') === false

*/

const anagrams = (strA, strB) => {
  const aMap = buildCharMap(strA)
  const bMap = buildCharMap(strb)

  if (Object.keys(aMap).length !== Object.keys(bMap).length) {
    return false;
  }

  for (let char in aMap) {
    if (aMap[char] !== bMap[char]) {
      return false
    }
  }
  return true;
}

function buildCharMap(str) {
  const map = {}
  for (let char of str.replace(/[^\w]/g, '').toLowerCase()) {
    map[char] = map[char] + 1 || 1
  }
  return map;
}
